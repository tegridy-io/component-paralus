apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: paralus
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: prompt
    app.kubernetes.io/version: v0.2.6
    helm.sh/chart: ztka-0.2.7
  name: prompt
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: paralus
      app.kubernetes.io/name: prompt
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: paralus
        app.kubernetes.io/name: prompt
    spec:
      containers:
        - command:
            - sh
            - -c
            - tail -F /audit-logs/audit.log 2>/tmp/tail-err
          image: busybox:latest
          imagePullPolicy: IfNotPresent
          name: prompt-tail
          securityContext: {}
          volumeMounts:
            - mountPath: /audit-logs
              name: audit-logs
        - envFrom:
            - configMapRef:
                name: prompt-config
            - secretRef:
                name: paralus-db
          image: paralusio/prompt:v0.1.2
          imagePullPolicy: IfNotPresent
          name: ztka
          ports:
            - containerPort: 7009
              name: http
          resources: {}
          securityContext: {}
          volumeMounts:
            - mountPath: /usr/local/bin/kubectl
              name: kubectl
              subPath: kubectl
            - mountPath: /audit-logs
              name: audit-logs
      initContainers:
        - command:
            - sh
            - -c
            - wget -q "https://dl.k8s.io/release/$(wget -qO- https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
              -O /data/kubectl && chmod +x /data/kubectl
          image: busybox:latest
          name: install-kubectl
          volumeMounts:
            - mountPath: /data
              name: kubectl
      securityContext: {}
      serviceAccountName: paralus-ztka
      volumes:
        - emptyDir: {}
          name: kubectl
        - emptyDir: {}
          name: audit-logs
