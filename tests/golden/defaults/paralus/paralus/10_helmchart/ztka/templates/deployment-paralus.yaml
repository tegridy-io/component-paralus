apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: paralus
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: paralus
    app.kubernetes.io/version: v0.2.6
    helm.sh/chart: ztka-0.2.7
  name: paralus
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: paralus
      app.kubernetes.io/name: paralus
  template:
    metadata:
      annotations:
        checksum/config: dedb6bebcb14b4bbc210fd21f5582980fca7419000e69aad046622272f76d05b
      labels:
        app.kubernetes.io/instance: paralus
        app.kubernetes.io/name: paralus
    spec:
      containers:
        - command:
            - sh
            - -c
            - tail -F /audit-logs/audit.log 2>/tmp/tail-err
          image: busybox:latest
          imagePullPolicy: IfNotPresent
          name: paralus-tail
          securityContext: {}
          volumeMounts:
            - mountPath: /audit-logs
              name: audit-logs
        - command:
            - ./paralus
          envFrom:
            - configMapRef:
                name: paralus-config
            - secretRef:
                name: paralus-db
          image: paralusio/paralus:v0.2.6
          imagePullPolicy: IfNotPresent
          name: paralus
          ports:
            - containerPort: 11000
              name: http
            - containerPort: 10000
              name: rpc
            - containerPort: 10001
              name: relay-peering
          resources: {}
          securityContext: {}
          volumeMounts:
            - mountPath: /audit-logs
              name: audit-logs
      initContainers:
        - args:
            - migrate
            - sql
            - -e
            - --yes
          command:
            - kratos
          env:
            - name: DSN
              valueFrom:
                secretKeyRef:
                  key: DSN
                  name: paralus-db
          image: paralusio/paralus-init:v0.2.6
          imagePullPolicy: IfNotPresent
          name: kratos-automigrate
        - args:
            - -path=/data/migrations/admindb
            - -database
            - $(DSN)
            - up
          command:
            - migrate
          env:
            - name: DSN
              valueFrom:
                secretKeyRef:
                  key: DSN
                  name: paralus-db
          image: paralusio/paralus-init:v0.2.6
          imagePullPolicy: IfNotPresent
          name: migrate-admindb
        - args:
            - -partner
            - Paralus
            - -partner-desc
            - Default Partner
            - -partner-host
            - paralus.local
            - -org
            - ParalusOrg
            - -org-desc
            - Default Organization
            - -admin-email
            - admin@paralus.local
            - -admin-first-name
            - Admin
            - -admin-last-name
            - User
          command:
            - paralus-init
          envFrom:
            - configMapRef:
                name: paralus-config
            - secretRef:
                name: paralus-db
          image: paralusio/paralus-init:v0.2.6
          imagePullPolicy: IfNotPresent
          name: initialize
      securityContext: {}
      serviceAccountName: paralus-ztka
      volumes:
        - emptyDir: {}
          name: audit-logs
